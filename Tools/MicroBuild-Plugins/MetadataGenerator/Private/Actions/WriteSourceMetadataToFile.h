/*
MicroBuild
Copyright (C) 2016 TwinDrills

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#pragma once

#include "Actions/IAction.h"
#include "Metadata/MetadataFileInfo.h"

#include "Core/Helpers/Strings.h"
#include "Core/Helpers/TextStream.h"

namespace MicroBuild {

// Writes the metadata previously generated by ExtractMetadataFromHeader
// into a generated header file.
class WriteSourceMetadataToFile : public IAction 
{
public:
	WriteSourceMetadataToFile(MetadataFileInfo& info, ProjectFile& project);

	virtual bool Execute() override;

protected:
	void WriteHeader(TextStream& stream);
	void WriteFooter(TextStream& stream);
	void WriteBaseRecordConstructor(TextStream& stream, MetadataObject::Ptr objectPtr);
	void WriteClass(TextStream& stream, MetadataClass::Ptr classPtr);
	void WriteMethod(TextStream& stream, MetadataClass::Ptr classPtr, MetadataMethod::Ptr methodPtr);
	void WriteParameter(TextStream& stream, MetadataMethod::Ptr methodPtr, MetadataParameter::Ptr parameterPtr);
	void WriteField(TextStream& stream, MetadataClass::Ptr classPtr, MetadataField::Ptr fieldPtr);
	void WriteEnum(TextStream& stream, MetadataEnum::Ptr enumPtr);
	void WriteEnumKey(TextStream& stream, MetadataEnum::Ptr enumPtr, MetadataEnumKey::Ptr key);
	void WriteRegistration(TextStream& stream);

	std::string MakeTypeCreation(MetadataType::Ptr type);

private:
	MetadataFileInfo& m_fileInfo;
	std::string m_fileId;
	ProjectFile& m_project;

};

}; // namespace MicroBuild
