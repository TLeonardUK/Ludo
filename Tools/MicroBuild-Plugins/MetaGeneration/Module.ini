; Ludo Game Engine
; Copyright (C) 2016 TwinDrills
; 
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>.

include("Module.Header.ini")

[Ludo]
BuildReflection=0

[Project]
Name=MetaGeneration
Group=Tools/MicroBuild/Plugins
OutputType=DynamicLib
OutputName=$(Name).plugin.$(Target.Platform)
OutputExtension=$(Host.DynamicLibExtension)

OutputDirectory=$(Project.Location)/../../Binaries/$(Host.Platform)_$(Target.Platform)

if (Target.Platform!=x86 && Target.Platform!=x64)
{
	ShouldBuild=False
}

[SearchPaths]
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/ThirdParty/Clang/llvm/tools/clang/include

[Clang]
;if (Target.Configuration==Debug)
;{
;	Configuration=Debug
;}
;else
;{
	Configuration=Release
;}

if (Target.Platform==x86)
{
	Platform=x86
}
else
{
	Platform=x86_64
}

[Libraries]
Library=$(Workspace.Directory)/../../Engine/Source/ThirdParty/Clang/build.$(Clang.Platform)/$(Clang.Configuration)/lib/libclang$(Host.StaticLibExtension)

[Libraries]
if (Target.PlatformName==Windows)
{
	# IME integration.
	Library=Imm32.lib
	# General media functionality.
	Library=Winmm.lib
	# Symbol loading and resolving at runtime.
	Library=dbghelp.lib
	# Socket networking.
	Library=ws2_32.lib
	# General shell functionality.
	Library=Shell32.lib
	# Windows management instrumentation code. Used to query system information.
	Library=WbemUuid.lib
	# General COM integration functionality.
	Library=comsuppw.lib
	# Authentication/Security routines.
	Library=Advapi32.lib
}

[PostBuildCommands]
if (Host.Platform==Windows)
{
	Command=xcopy /Q /E /Y /I "$(Ludo.EngineDirectory)\Source\ThirdParty\Clang\build.$(Clang.Platform)\$(Clang.Configuration)\bin\libclang$(Host.DynamicLibExtension)" "$(Project.OutputDirectory)"
}
else
{
	Command=cp "$(Ludo.EngineDirectory)/Source/ThirdParty/Clang/build.$(Clang.Platform)/$(Clang.Configuration)/bin/libclang$(Host.DynamicLibExtension)" "$(Project.OutputDirectory)"
}