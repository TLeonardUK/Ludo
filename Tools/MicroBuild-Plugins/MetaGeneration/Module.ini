; Ludo Game Engine
; Copyright (C) 2016 TwinDrills
; 
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>.

include("Module.Header.ini")

[Ludo]
BuildReflection=0

[Project]
Name=MetaGeneration
Group=Tools/MicroBuild/Plugins
OutputType=DynamicLib
OutputName=$(Name).plugin.$(Target.Platform).$(Target.Configuration)
OutputExtension=$(Host.DynamicLibExtension)
OutputDirectory=$(Workspace.Directory)/../../Tools/MicroBuild/Binaries/$(Host.Platform)_$(Target.Platform)

if (Target.Platform!=x86 && Target.Platform!=x64)
{
	ShouldBuild=False
}

[Defines]
if (Target.Configuration==Debug)
{
	Define=MB_DEBUG_BUILD
}
else if (Target.Configuration==Release)
{
	Define=MB_RELEASE_BUILD
}
else if (Target.Configuration==Shipping)
{
	Define=MB_SHIPPING_BUILD
}

if (Target.Platform==x86)
{
	Define=MB_ARCHITECTURE_X86
}
else if (Target.Platform==x64)
{
	Define=MB_ARCHITECTURE_X64
}

[SearchPaths]
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/ThirdParty/Clang/llvm/tools/clang/include
IncludeDirectory=$(Project.Directory)/../../MicroBuild/Source/MicroBuild-Schemas/Source
IncludeDirectory=$(Project.Directory)/../../MicroBuild/Source/MicroBuild-Core/Source
IncludeDirectory=$(Project.Directory)/Private

[Clang]
;if (Target.Configuration==Debug)
;{
;	Configuration=Debug
;}
;else
;{
	Configuration=Release
;}

if (Target.Platform==x86)
{
	Platform=x86
}
else
{
	Platform=x86_64
}

[Libraries]
Library=$(Workspace.Directory)/../../Engine/Source/ThirdParty/Clang/build.$(Clang.Platform)/$(Clang.Configuration)/lib/libclang$(Host.StaticLibExtension)
Library=$(Project.Directory)/../../MicroBuild/Binaries/$(Host.Platform)_$(Target.Platform)/MicroBuild-Schemas$(Host.StaticLibExtension)
Library=$(Project.Directory)/../../MicroBuild/Binaries/$(Host.Platform)_$(Target.Platform)/MicroBuild-Core$(Host.StaticLibExtension)
Library=$(Project.Directory)/../../MicroBuild/Binaries/$(Host.Platform)_$(Target.Platform)/MicroBuild-ZLib$(Host.StaticLibExtension)

[PostBuildCommands]
if (Host.Platform==Windows)
{
	Command=xcopy /Q /E /Y /I "$(Ludo.EngineDirectory)\Source\ThirdParty\Clang\build.$(Clang.Platform)\$(Clang.Configuration)\bin\libclang$(Host.DynamicLibExtension)" "$(Project.OutputDirectory)"
}
else
{
	Command=cp "$(Ludo.EngineDirectory)/Source/ThirdParty/Clang/build.$(Clang.Platform)/$(Clang.Configuration)/bin/libclang$(Host.DynamicLibExtension)" "$(Project.OutputDirectory)"
}