; Ludo Game Engine
; Copyright (C) 2016 TwinDrills
; 
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>.

[MicroBuild]
RequiredVersion=1.0

[Ludo]
UsePCH=1
BuildReflection=0

[Plugin.MetaGeneration]
IsEnabled=$(Ludo.BuildReflection)
OutputDirectory=$(Workspace.Directory)/../ProjectFiles/Generated/$(Target.Configuration)_$(Target.Platform)/
RootDirectory=$(Project.Directory)/../

[Project]
Location=$(Workspace.Directory)/../ProjectFiles/$(Name)
IntermediateDirectory=$(Location)/Obj
OutputType=StaticLib
OutputExtension=$(Host.StaticLibExtension)
OutputName=$(Name)
Language=Cpp
LanguageVersion=Cpp_11
RootNamespace=Ludo

if (OutputType!=StaticLib)
{
	OutputDirectory=$(Workspace.Directory)/../../Binaries
}
else
{
	OutputDirectory=$(Project.Location)/Bin
}

if (Project.Name~="*-Windows" && Host.Platform!=Windows)
{
	ShouldBuild=False
}
else if (Project.Name~="*-MacOS" && Host.Platform!=MacOS)
{
	ShouldBuild=False
}
else if (Project.Name~="*-Linux" && Host.Platform!=Linux)
{
	ShouldBuild=False
}

[Files]
File=$(Project.Directory)/Module.ini
File=$(Project.Directory)/Private/**
File=$(Project.Directory)/Public/**

[Build]
WarningLevel=High

if (Ludo.UsePCH)
{
	PrecompiledHeader=$(Project.Directory)/Private/PCH.h
	PrecompiledSource=$(Project.Directory)/Private/PCH.cpp
}

if (Target.Configuration==Debug)
{
	OptimizationLevel=Debug
}
else
{
	OptimizationLevel=Full
}

[SearchPaths]
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/Engine
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/ThirdParty
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/Binaries
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/Tools

[Dependencies]
AutoLink=True

;if (Target.Platform==Windows && Project.Exists($(Project.Name)-Windows))
;{
;	Dependency=$(Project.Name)-Windows
;}
;else if (Target.Platform==MacOS && Project.Exists($(Project.Name)-MacOS))
;{
;	Dependency=$(Project.Name)-MacOS
;}
;else if (Target.Platform==Linux && Project.Exists($(Project.Name)-Linux))
;{
;	Dependency=$(Project.Name)-Linux
;}
;Dependency=Audio-Core

[Libraries]
;if (!Ludo.Monolithic)
;{
;	foreach (Dependency : Project.Dependencies)
;	{
;		Library=$(Workspace.Directory)/../Binaries/$(Name)$(Host.DynamicLibExtension)
;	}
;}
