; Ludo Game Engine
; Copyright (C) 2016 TwinDrills
; 
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>.

[MicroBuild]
RequiredVersion=1.0

if (Ludo.BuildReflection)
{
	RequiredPlugin=MetadataGenerator
}
if (Ludo.BuildDocumentation)
{
	RequiredPlugin=DocumentationGenerator
}

[Ludo]
UsePCH=1
BuildReflection=0
BuildDocumentation=0
IncludeInDocumentation=1
BuildThirdParty=0

[Plugin.MetaGeneration]
IsEnabled=$(Ludo.BuildReflection)
OutputDirectory=$(Workspace.Directory)/../ProjectFiles/Generated/Meta/$(Target.Configuration)_$(Target.Platform)/
RootDirectory=$(Project.Directory)/../

[Plugin.DocGeneration]
if (Target.Configuration==Shipping)
{
	IsEnabled=$(Ludo.BuildDocumentation)
}
else
{
	IsEnabled=0
}
IncludeInDocumentation=$(Ludo.IncludeInDocumentation)
TempDirectory=$(Workspace.Directory)/../ProjectFiles/Generated/Docs/$(Target.Configuration)_$(Target.Platform)/$(Project.Name)/
OutputDirectory=$(Workspace.Directory)/../../Docs/
RootDirectory=$(Project.Directory)/../
DoxygenBinary=$(Workspace.Directory)/../../Tools/Doxygen/Binaries/$(Target.PlatformName)/doxygen$(Host.ExeExtension)
DoxygenTemplate=$(Workspace.Directory)/../../Tools/Doxygen/Config/project.template

[Project]
Location=$(Workspace.Directory)/../ProjectFiles/$(Name)
IntermediateDirectory=$(Location)/Obj
OutputType=StaticLib
OutputExtension=$(Host.StaticLibExtension)
OutputName=$(Name)
Language=Cpp
LanguageVersion=Cpp_11
RootNamespace=Ludo

if (OutputType != StaticLib)
{
	OutputDirectory=$(Workspace.Directory)/../../Binaries
}
else
{
	OutputDirectory=$(Project.Location)/Bin
}

if (Project.Name~="*.Windows" && Host.Platform!=Windows)
{
	ShouldBuild=False
}
else if (Project.Name~="*.MacOS" && Host.Platform!=MacOS)
{
	ShouldBuild=False
}
else if (Project.Name~="*.Linux" && Host.Platform!=Linux)
{
	ShouldBuild=False
}

[Files]
File=$(Project.Directory)/Module.ini
File=$(Project.Directory)/Private/**
File=$(Project.Directory)/Public/**

[Build]
WarningLevel=High

if (Ludo.UsePCH)
{
	PrecompiledHeader=$(Project.Directory)/Private/PCH.h
	PrecompiledSource=$(Project.Directory)/Private/PCH.cpp
}

if (Target.Configuration==Debug)
{
	OptimizationLevel=Debug
}
else
{
	OptimizationLevel=Full
}

if (Target.IDE==vs2017)
{
	PlatformToolset=MSBuild_v141
}

[SearchPaths]
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/Engine
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/ThirdParty
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/Binaries
IncludeDirectory=$(Workspace.Directory)/../../Engine/Source/Tools

[Dependencies]
AutoLink=True

if (Ludo.BuildReflection)
{
	Dependency=MetadataGenerator
}
if (Ludo.BuildDocumentation)
{
	Dependency=DocumentationGenerator
}

[Flags]
StaticRuntime=False